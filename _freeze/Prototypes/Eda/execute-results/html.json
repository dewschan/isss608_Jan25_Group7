{
  "hash": "67ef4103e23f4c55f72ef924a747f162",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA)\"\nauthor: \"Dew Stella Chan\"\ndate: \"2025-03-29\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\nThe goal of this exercise is to:\n\n-   perform Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA) on the data sets namely Weather, Dengue Cases and Electricity Consumption.\n\n-   based on the outcome of EDA and CDA to determine the parameters and outputs that will be exposed on the shiny applications and\n\n-   to select appropriate Shiny UI components for exposing the parameters determine above\n\n## Data sets:\n\nThe following data sets were used for this exercise:\n\n-   The climate data set was being scraped from [Meteorological Service Website, Singapore](https://www.weather.gov.sg/climate-historical-daily/) using beautiful soup python package.\n\n    The scraped historical daily weather records in Singapore were then combined using python into one csv file and loaded in R Studio.\n\n-   The dengue data sets were provided at the courtesy of the National Environment Agency (NEA), Singapore.\n\n    The data set is also publicly available on [NEA website](https://www.nea.gov.sg/dengue-zika/dengue/dengue-cases) and [Ministry of Health website.](https://www.moh.gov.sg/others/resources-and-statistics/infectious-disease-statistics-2024-weekly-infectious-diseases-bulletin)\n\n## Libraries:\n\nThe following libraries were used for this take home exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, plotly, DT, scales, tidyverse, readxl, SmartEDA, skimr, corrplot, readxl, ggdist, ggridges, ggthemes, colorspace, scales, nortest, easystats, tidymodels)\n```\n:::\n\n\n\n## Data Preparation Process:\n\nThe preliminary data preparation for the data sets were detailed in \\[project webpage\\] (https://isss608jan25group7.netlify.app/shiny/data_prep).\n\nUsing the pre-prepared data, this section will transform the weather data so that EDA and CDA could be performed in the subsequent steps.\n\nFor this part of the analysis, it will focus on the time period from 2014 to Jun 2024. This is to aligned to the availability of data time period from other data sets, the dengue data set is available from 2014 to 2024 and electricity consumption is available from 2005 to Jun 2024.\n\nHence the common period is from **2014 to June 2024**. we would be using this common period.\n\nAlthough the weather station at Changi has the most completed dataset,\n\n## Weather Data:\n\nThe following code chuck is to read the weather data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- read_rds('data/rds/weather.rds')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(weather)\n```\n:::\n\n\n\nThe list of the active weather stations are are found in this link: https://www.weather.gov.sg/wp-content/uploads/2024/08/Station_Records.pdf\n\nBased on the above summary table, we noted that there are a lot of missing data. with reference to the weather stations data records, 16 weather stations were selected. The names of the selected weather stations were listed in the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_weather <- filter(weather, \n                           Date >= as.Date(\"2014-01-01\") & \n                           Date <= as.Date(\"2024-06-30\") & \n                           Station %in% c('Admiralty','Ang Mo Kio', 'Changi', \n                                          'Choa Chu Kang (south)', 'Clementi', \n                                          'East Coast Parkway', 'Jurong (West)', \n                                          'Marina Barrage','Newton',\n                                          'Paya Lebar', 'Sembawang',\n                                          'Pasir Panjang', 'Seletar',\n                                          'Tai Seng','Tengah','Tuas South'))%>%\n                            filter(MinTemperature >= 15)\n```\n:::\n\n\n\nUse summary function to view the filtered weather\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary (filtered_weather)\n```\n:::\n\n\n\nThe following code chunk is used to aggregate the data together at monthly dimension.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_Monthly <- filtered_weather %>%\n  group_by(Year, Month) %>%\n  summarize(\n    AvgMeanTemp = mean(MeanTemperature, na.rm = TRUE),\n    MaxTemp = max(MaxTemperature, na.rm = TRUE),\n    MinTemp = min(MinTemperature, na.rm = TRUE),\n    total_rainfall=sum(DailyRainfall,na.rm=TRUE),\n    Highest30minRainfall=max(Highest30minRainfall,na.rm=TRUE),\n    Highest60minRainfall=max(Highest60minRainfall, na.rm=TRUE),\n    Highest120minRainfall=max(Highest120minRainfall, na.rm=TRUE), \n    DaysAbove35 = sum(MaxTemperature >=35, na.rm = TRUE)\n  )\n```\n:::\n\n\n\nThe following code chuck is to aggregate the yearly data together.\n\n2024 data are being dropped as the electricity consumption data for 2024 is incomplete\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_Yearly <- filtered_weather %>%\n  group_by(Year) %>%  # Group by Year only\n  summarize(\n    AvgMeanTemp = mean(MeanTemperature, na.rm = TRUE),\n    MaxTemp = max(MaxTemperature, na.rm = TRUE),        \n    MinTemp = min(MinTemperature, na.rm = TRUE),      \n    total_rainfall = sum(DailyRainfall, na.rm = TRUE),\n    Highest30minRainfall = max(Highest30minRainfall, na.rm = TRUE),\n    Highest60minRainfall = max(Highest60minRainfall, na.rm = TRUE), \n    Highest120minRainfall = max(Highest120minRainfall, na.rm = TRUE), \n    DaysAbove35 = sum(MaxTemperature >= 35, na.rm = TRUE)\n  ) %>%\n  filter(Year != 2024)\n```\n:::\n\n\n\n### Data Preparation for the dengue data\n\nThe dengue data set was provided at the courtesy of the National Environment Agency (NEA), Singapore.\n\nThe data set is also publicly available on [NEA website](https://www.nea.gov.sg/dengue-zika/dengue/dengue-cases) and [Ministry of Health website.](https://www.moh.gov.sg/others/resources-and-statistics/infectious-disease-statistics-2024-weekly-infectious-diseases-bulletin)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMonthly_dengue <-read_xlsx(\"data/Ex03/Denguecases.xlsx\", \"Monthly\")\n```\n:::\n\n\n\nThe following code is to transform the data to longer format, year and months columns to numeric.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMonthly_dengue_longer <- Monthly_dengue %>%\n  pivot_longer(\n    cols = 2:12,\n    names_to = \"Year\",\n    values_to = \"denguecases\"\n  ) %>%\n  filter(!str_detect(`Month/Year`, \"Total\")) %>%\n  rename(Month = `Month/Year`) %>%\n  mutate(\n    Year = as.numeric(Year),\n    Month = as.numeric(Month)\n  )\n```\n:::\n\n\n\nThe following code chunk is to derive the yearly dengue cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_dengue <- Monthly_dengue_longer %>%\n  filter(Year != 2024) %>%\n  group_by(Year) %>%\n  summarise(denguecases=sum(denguecases))\n\ncolnames(yearly_dengue)\n```\n:::\n\n\n\nThe population data is available at the following data [link](https://tablebuilder.singstat.gov.sg/statistical-tables/downloadMultiple/LGAA_ptQV0-3AQjZN4FFXw).\n\nBased on the National Centre for Infectious Diseases [article](https://www.ncid.sg/Health-Professionals/Articles/Pages/Epidemic-Dengue-in-Singapore-During-COVID-19-Pandemic.aspx#:~:text=In%20fact%2C%20in%202020%2C%20a,Aedes%20aegypti%20mosquito%20since%202017.), the dengue incidence rate is being normalised by population, and transformed to the number of dengue cases per 100, 000 population.\n\nThis is usually only applicable total number of dengue cases reported yearly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation <- read_xlsx(\"data/Ex03/population.xlsx\", \"Population\")\npopulation$Year <- as.numeric(population$Year)\npopulation$Population <- as.numeric(population$Population)\n\nyearly_dengue <- yearly_dengue %>% left_join(population, by = \"Year\")\n\nyearly_dengue$dengueincidencerate <-yearly_dengue$denguecases/yearly_dengue$Population*100000\n```\n:::\n\n\n\n### Data Preparation for the Electricity consumption data.\n\nThe electricity consumption data set is available at this [link](https://www.ema.gov.sg/resources/singapore-energy-statistics/chapter3).\n\n#### Normalizing the total electricity consumption per household.\n\nThe data set were extracted and joined with the number of Households in Singapore. The Households data is available at this [link](https://www.singstat.gov.sg/find-data/search-by-theme/households/households/latest-data).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load Monthly electricity data\nMonthly_electricity <- read_xlsx(\"data/electricityconsumption.xlsx\", \"Monthly\")\nMonthly_electricity$Year <- as.numeric(Monthly_electricity$Year)\nMonthly_electricity$Monthly_Elec_consump <- as.numeric(Monthly_electricity$Monthly_Elec_consump)\n\n# Check column names\ncolnames(Monthly_electricity)\n\n# Load Households data\nHouseholds <- read_xlsx(\"data/Ex03/Households.xlsx\", \"Households\")\nHouseholds$Year <- as.numeric(Households$Year)\nHouseholds$NoofHouseholds <- as.numeric(Households$NoofHouseholds)\n\n# Check column names\ncolnames(Households)\n\n# Combine datasets and calculate electricity consumption per household\nMonthly_electricity <- Monthly_electricity %>%\n  left_join(Households, by = \"Year\") %>%\n  mutate(Monthly_Elec_per_Household = Monthly_Elec_consump / NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_electricity <-read_xlsx(\"data/electricityconsumption_DS.xlsx\", \"Yearly\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load yearly electricity data\nyearly_electricity <- read_xlsx(\"data/electricityconsumption.xlsx\", \"Yearly\")\nyearly_electricity$Year <- as.numeric(yearly_electricity$Year)\nyearly_electricity$Yearly_Elec_consump <- as.numeric(yearly_electricity$Yearly_Elec_consump)\n\n# Load households data\nHouseholds <- read_xlsx(\"data/Ex03/Households.xlsx\", \"Households\")\nHouseholds$Year <- as.numeric(Households$Year)\nHouseholds$NoofHouseholds <- as.numeric(Households$NoofHouseholds)\n\n# Combine datasets and calculate yearly electricity consumption per household\nyearly_electricity <- yearly_electricity %>%\n  left_join(Households, by = \"Year\") %>%\n  mutate(\n    Yearly_Elec_per_Household = Yearly_Elec_consump / NoofHouseholds\n  )\n```\n:::\n\n\n\n### Combining data sets\n\nThe code chunks below is for combining the various data sets, both the monthly and the year version will be written to rds.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data <- Monthly_dengue_longer %>% \n  left_join(weather_Monthly, by = c(\"Year\", \"Month\")) %>%\n  left_join(Monthly_electricity, by = c(\"Year\", \"Month\"))%>%\n  filter(!is.na(Monthly_Elec_consump))  %>%\n  select(-NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(combined_Monthly_data, file = \"data/Ex03/rds/combined_Monthly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data <- read_rds(\"data/Ex03/rds/combined_Monthly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Yearly_data <- yearly_dengue %>% \n  left_join(weather_Yearly, by = c(\"Year\")) %>%\n  left_join(yearly_electricity, by = c(\"Year\"))%>%\n  select(-Population, -NoofHouseholds)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(combined_Yearly_data, file = \"data/Ex03/rds/combined_Yearly_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Yearly_data <- read_rds(\"data/Ex03/rds/combined_Yearly_data.rds\")\n```\n:::\n\n\n\n## Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA)\n\n### Yearly Trend\n\nTo start of EDA, this exercise used the yearly data to explore the overall trends on the variables. This will be useful to provide the preliminary understanding on how climate change has impacted the local weather parameters, health (represented by dengue cases) and household consumption represented by electricity.\n\n#### Yearly Trends on Temperature\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reshape the data for columns 3 to 5\nyearly_combined_data <- combined_Yearly_data %>%\n  select(Year, AvgMeanTemp, MaxTemp, MinTemp) %>%\n  pivot_longer(cols = 2:4, names_to = \"Variable\", values_to = \"Value\")  # Convert to long format\n\n# Plot with trend lines for each variable\nggplot(yearly_combined_data, aes(x = Year, y = Value, color = Variable)) +\n  geom_point(alpha = 0.6, size = 3) +  # Scatter plot points\n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) +  # Linear trend line\n  labs(\n    title = \"Yearly Trends in Temperature Variables\",\n    x = \"Year\",\n    y = \"Value\",\n    color = \"Variable\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n\n#### \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = MaxTemp)) +\n  geom_point(alpha = 0.6, size = 3) +  # Scatter plot points\n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) +  # Linear trend line\n  labs(\n    title = \"Yearly Trends in Max Temperature\",\n    x = \"Year\",\n    y = \"Max Temp\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = DaysAbove35)) +\n  geom_point(alpha = 0.6, size = 3) +  # Scatter plot points\n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) +  \n  labs(\n    title = \"Yearly Trends in No. of days above 35\",\n    x = \"Year\",\n    y = \"Days Above 35 degree\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n\n#### Yearly Trends on Rainfall\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = total_rainfall)) +\n  geom_point(alpha = 0.6, size = 3) +  # Scatter plot points\n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) + \n  labs(\n    title = \"Yearly Trends in Total Rainfall\",\n    x = \"Year\",\n    y = \"Total Rainfall (mm)\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = Highest30minRainfall)) +\n  geom_point(alpha = 0.6, size = 3) + \n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) + \n  labs(\n    title = \"Yearly Trends in Highest Rainfall in 30 minutes\",\n    x = \"Year\",\n    y = \"Highest 30 min Rainfall\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = dengueincidencerate)) +\n  geom_point(alpha = 0.6, size = 3) + \n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) + \n  labs(\n    title = \"Yearly Trends in Dengue Incidence Rate\",\n    x = \"Year\",\n    y = \" Dengue Incidence Rate\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = Yearly_Elec_consump)) +\n  geom_point(alpha = 0.6, size = 3) + \n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) + \n  labs(\n    title = \"Yearly Trends in Electricity Consumption\",\n    x = \"Year\",\n    y = \" Total Yearly dElectricity Consumption\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Yearly_data, aes(x = Year, y = DaysAbove35)) +\n  geom_point(alpha = 0.6, size = 3) + \n  geom_smooth(method = \"lm\", linetype = \"dashed\", size = 1) + \n  labs(\n    title = \"Yearly Trends in DaysAbove35\",\n    x = \"Year\",\n    y = \" Total No. of days above 35 Degree\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n\n### Distribution of of the data\n\n#### Histograms\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_data <- combined_Monthly_data %>%\n  pivot_longer(cols = where(is.numeric), names_to = \"Variable\", values_to = \"Value\")\n\n# Create faceted histogram for all continuous variables\nggplot(long_data, aes(x = Value)) + \n  geom_histogram(binwidth =1, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  theme_minimal() +\n  facet_wrap(~ Variable, scales = \"free\") +\n  labs(title = \"Histograms of All Continuous Variables\", x = \"Value\", y = \"Frequency\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = total_rainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$total_rainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$total_rainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Total Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest30minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest30minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest30minRainfall\n                                                , na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 30min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest60minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest60minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest60minRainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 60min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest120minRainfall)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Highest120minRainfall, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Highest120minRainfall, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Highest 120min Rainfall\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Monthly_Elec_consump)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$Monthly_Elec_consump, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$Monthly_Elec_consump, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Monthly Electricity Consumption\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = denguecases)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"black\", alpha = 0.7) +\n  stat_function(fun = dnorm, args = list(mean = mean(combined_Monthly_data$denguecases, na.rm = TRUE), \n                                         sd = sd(combined_Monthly_data$denguecases, na.rm = TRUE)), \n                color = \"red\", size = 1) +\n  labs(title = \"Histogram with Normal Curve\", x = \"Dengue cases\", y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary (combined_Monthly_data)\n```\n:::\n\n\n\n### Correlation between the various variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = combined_Monthly_data, \n  cor.vars = 3:13)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggstatsplot::ggcorrmat(\n  data = combined_Yearly_data, \n  cor.vars = 2:13)\n```\n:::\n\n\n\n::: callout-note\nBased on the correlation plot, it is noted for the yearly data there is no correlation between the yearly data across all variables.\n:::\n\n### Distribution of the data\n\n### Ridge lines of variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data$Year <- as.factor(combined_Monthly_data$Year)\n\nggplot(combined_Monthly_data, \n       aes(x = AvgMeanTemp, \n           y = Year)) +  # Ensure 'Year' is correctly mapped to y-axis\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  # Adjust fill color\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Mean Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(AvgMeanTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(AvgMeanTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, \n       aes(x = MaxTemp, \n           y = Year)) + \n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  \n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Max Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(MaxTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(MaxTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, \n       aes(x = MinTemp, \n           y = Year)) + \n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", 0.3),  \n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Monthly Min Temperature\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL, \n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform both Shapiro-Wilk and Anderson-Darling tests for each year\nnormality_results <- combined_Monthly_data %>%\n  group_by(Year) %>%\n  summarise(\n    Shapiro_p = shapiro.test(MinTemp)$p.value,  # Shapiro-Wilk test p-value\n    Anderson_p = ad.test(MinTemp)$p.value      # Anderson-Darling test p-value\n  ) %>%\n  mutate(\n    Shapiro_Result = ifelse(Shapiro_p > 0.05, \"Normal\", \"Not Normal\"),  # Interpretation\n    Anderson_Result = ifelse(Anderson_p > 0.05, \"Normal\", \"Not Normal\")  # Interpretation\n  )\n\n# View combined results\nprint(normality_results)\n```\n:::\n\n\n\n### Analysis of Variance: Parametric and Non-Parametric Methods\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_Monthly_data$total_rainfall <- as.numeric(combined_Monthly_data$total_rainfall)\ncombined_Monthly_data <- combined_Monthly_data %>%\n  filter(!is.na(total_rainfall))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = total_rainfall, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = total_rainfall, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = total_rainfall, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = FALSE, # Perform pairwise tests\n  pairwise.display = \"none\",\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = MaxTemp, \n  type = \"p\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = DaysAbove35, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = AvgMeanTemp, \n  type = \"p\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = denguecases , \n  type = \"Np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = denguecases , \n  type = \"Np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = FALSE, # Perform pairwise tests\n  pairwise.display = \"none\",\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = Monthly_Elec_consump, \n  type = \"np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = TRUE,  # Perform pairwise tests\n  pairwise.display = \"significant\",  # Show only significant pairs\n  p.adjust.method = \"fdr\",  # Adjust for multiple comparisons\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = combined_Monthly_data,\n  x = Year, \n  y = Monthly_Elec_consump , \n  type = \"Np\",  # Non-Parametric ANOVA, Parameteric - p\n  mean.ci = TRUE,  # Display mean and confidence interval\n  pairwise.comparisons = FALSE, # Perform pairwise tests\n  pairwise.display = \"none\",\n  messages = FALSE  # Suppress additional messages\n)\n```\n:::\n\n\n\n### Multi-Linear Regression (MLR)\n\n#### Using MLR to understand the impact of climate change on health aspect\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(combined_Monthly_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_health <- lm(denguecases ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall+ Highest60minRainfall + Highest120minRainfall+DaysAbove35 , data = combined_Monthly_data)\nsummary(model_health)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model_health)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c_health <- check_collinearity(model_health)\nplot(check_c_health)\n```\n:::\n\n\n\n##### Model Refinement\n\nHighest Rainfall in 60 min data was removed due to multi-collinearity.\n\nBased on the outcome of the initial model, it shows that the increase in dengue cases could not be explained by weather parameters. The correlation plot shows that dengue cases has correlation with electricity consumption.\n\nHence fo r model refinement, it is added to the model as a variable. The model become significant with highest 30 mins rainfall explaining the increasing trend dengue cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_health <- lm(denguecases ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall + Highest120minRainfall + Monthly_Elec_consump + DaysAbove35 , data = combined_Monthly_data)\n\nsummary(model_health)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_health)\n```\n:::\n\n\n\n#### Using MLR to understand the impact of climate change on electricity consumption\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_elec <- lm(Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall+ Highest60minRainfall + Highest120minRainfall+DaysAbove35, data = combined_Monthly_data)\n\nsummary(model_elec)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c_elec <- check_collinearity(model_elec)\nplot(check_c_elec)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_elec <- lm(Monthly_Elec_consump ~ MaxTemp + MinTemp + AvgMeanTemp+ Highest30minRainfall + Highest120minRainfall + DaysAbove35 , data = combined_Monthly_data)\n\nsummary(model_elec)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_elec)\n```\n:::\n\n\n\n### Conclusion and further visualization\n\nAlthough the MLR models may not be able to explain fully on the increase in the dengue cases and household electricity consumption over the year using the weather parameters, but the MLR models met the requirements for this exercise. The use of MLR technique is to use the weather parameters to explore if there were trends between changing weather patterns and its impact on our daily life.\n\n#### Climate Change on Health\n\nUsing the outcome of the 1st MLR model on health, although the P-value is at 0.05 which close to the conventional threshold of 0.05, this indicate the model is marginally significant, and suggest that the weather parameters used as a group does not provide a strong explanation of explaining the increase in dengue cases over the recent years.\n\nHowever it is important to note that among the weather parameters, Average Mean Temperature for the month and the highest 30 min rainfall are statically significant in the first model and only the highest rainfall 30 minutes is still statically significant for explaining the dengue trend after adding in the monthly total electricity consumption.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = AvgMeanTemp, y = denguecases)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Dengue Cases \\nand Average Mean Temperature \",\n    x = \"Average Daily Mean Temperature (Monthly)\",\n    y = \"Dengue Cases\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest30minRainfall, y = denguecases)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Dengue Cases \\nand Highest 30 min Rainfall \",\n    x = \"Highest 30 min Rainfall\",\n    y = \"Dengue Cases\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Monthly_Elec_consump, y = denguecases)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Dengue Cases \\nand Electricity Consumption\",\n    x = \"Monthly Household Electricity Consumption\",\n    y = \"Dengue Cases\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n\n**Climate Change on Electricity Consumption**\n\nBased on the MLR regression models built for the Household Electricity Consumption, the statistically significant variables are Average Mean Temperature, Highest 120 min Rainfall and Minimum Temperature. Hence the following visualization are used to show their relationship.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = AvgMeanTemp, y = Monthly_Elec_consump)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Electricity Consumption \\nand Average Mean Temperature \",\n    x = \"Average Daily Mean Temperature (Monthly)\",\n    y = \"Monthly Household Electricity Consumption\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = Highest120minRainfall, y = Monthly_Elec_consump)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Electricity Consumption \\nand Highest 120 min Rainfall\",\n    x = \"Highest 120 min Rainfall\",\n    y = \"Monthly Household Electricity Consumption\"\n  ) +\n  theme_minimal()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(combined_Monthly_data, aes(x = MinTemp, y = Monthly_Elec_consump)) +\n  geom_point(color = \"blue\", alpha = 0.6, size = 3) +  # Scatter plot with points\n  geom_smooth(method = \"lm\", color = \"red\", linetype = \"dashed\") +  # Linear trend line\n  labs(\n    title = \"Relationship Between Electricity Consumption \\nand Minimum Temperature\",\n    x = \"Minimum Temperature\",\n    y = \"Monthly Household Electricity Consumption\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n\n### Disclaimer\n\nThis take home exercise was done with reference to methods in Prof Kam's e textbook https://r4va.netlify.app/ , materials on R available online and the use of Microsoft co-pilot to troubleshoot syntax errors and streamline codes.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}