{
  "hash": "7d02d0711786fc149709b9173e0ef6e6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Preparation\"\nauthor: \"Sei Sar Hla Kyi, Sathvika Subramanian, Dew Stella Chan\"\ndate: \"2025-03-10\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\nThe following document details the data preparation process for the building the prototype for the shiny app of this project assignment.\n\n# Libraries Used for Data Preparation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readxl,SmartEDA)\n```\n:::\n\n\n\n# Importing data sets\n\nThe climate data set was being scraped from [Meteorological Service Website, Singapore](https://www.weather.gov.sg/climate-historical-daily/) using beautiful soup python package.\n\nThe scraped historical daily weather records in Singapore were then combined using python into one csv file and loaded in R Studio.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather<- read_csv(\"data/combined_weather_data.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather %>% ExpData(type=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index                 Variable_Name Variable_Type Sample_n Missing_Count\n1      1                       Station     character   446491             0\n2      2                          Year       numeric   445641           850\n3      3                         Month       numeric   445641           850\n4      4                           Day       numeric   445641           850\n5      5     Daily Rainfall Total (mm)     character   446491             0\n6      6  Highest 30 min Rainfall (mm)     character   173989        272502\n7      7  Highest 60 min Rainfall (mm)     character   173989        272502\n8      8 Highest 120 min Rainfall (mm)     character   173989        272502\n9      9         Mean Temperature (°C)     character   446491             0\n10    10      Maximum Temperature (°C)     character   446256           235\n11    11      Minimum Temperature (°C)     character   446244           247\n12    12        Mean Wind Speed (km/h)     character   446491             0\n13    13         Max Wind Speed (km/h)     character   446217           274\n14    14  Highest 30 Min Rainfall (mm)     character   272502        173989\n15    15  Highest 60 Min Rainfall (mm)     character   272502        173989\n16    16 Highest 120 Min Rainfall (mm)     character   272502        173989\n   Per_of_Missing No_of_distinct_values\n1           0.000                    63\n2           0.002                    21\n3           0.002                    12\n4           0.002                    31\n5           0.000                  1478\n6           0.610                   477\n7           0.610                   609\n8           0.610                   719\n9           0.000                   106\n10          0.001                   159\n11          0.001                   116\n12          0.000                   326\n13          0.001                   576\n14          0.390                   414\n15          0.390                   545\n16          0.390                   637\n```\n\n\n:::\n:::\n\n\n\n# Data Prep for Weather Data\n\n## Renaming Variables\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(weather) <- c(\"Station\", \"Year\", \"Month\", \"Day\", \n                            \"DailyRainfall\", \"Highest30minRainfall.x\",\"Highest60minRainfall.x\",\"Highest120minRainfall.x\",\n                          \"MeanTemperature\", \n                            \"MaxTemperature\", \"MinTemperature\", \n                            \"MeanWindSpeed\", \"MaxWindSpeed\", \n                            \"Highest30minRainfall.y\",\"Highest60minRainfall.y\",\"Highest120minRainfall.y\")\n```\n:::\n\n\n\n## Merging Columns\n\nThe columns **`Highest30minRainfall.x`** and **`Highest30minRainfall.y`** need to be merged into a single column. Whenever one of these columns has an `NA` value, the other column will have a valid value, meaning that together they form the complete dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge the columns and replace any remaining NA or \"-\" with 0\nweather <- weather %>%\n  mutate(\n    Highest30minRainfall = coalesce(`Highest30minRainfall.x`, `Highest30minRainfall.y`),\n    Highest60minRainfall = coalesce(`Highest60minRainfall.x`, `Highest60minRainfall.y`),\n    Highest120minRainfall = coalesce(`Highest120minRainfall.x`, `Highest120minRainfall.y`)\n  ) %>%\n  # Convert \"-\" to NA, then replace NA with 0\n  mutate(\n    Highest30minRainfall = as.numeric(Highest30minRainfall), \n    Highest30minRainfall = ifelse(is.na(Highest30minRainfall), 0, Highest30minRainfall),\n    \n    Highest60minRainfall = as.numeric(Highest60minRainfall), \n    Highest60minRainfall = ifelse(is.na(Highest60minRainfall), 0, Highest60minRainfall),\n    \n    Highest120minRainfall = as.numeric(Highest120minRainfall), \n    Highest120minRainfall = ifelse(is.na(Highest120minRainfall), 0, Highest120minRainfall)\n  ) %>%\n  # Drop the original columns\n  select(-c(`Highest30minRainfall.x`, `Highest30minRainfall.y`, \n            `Highest60minRainfall.x`, `Highest60minRainfall.y`, \n            `Highest120minRainfall.x`, `Highest120minRainfall.y`))\n```\n:::\n\n\n\n## Converting data type to numeric\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert columns 5 to 10 to numeric\nweather[, 5:10] <- lapply(weather[, 5:10], function(x) {\n  as.numeric(x)  # Convert to numeric\n})\n```\n:::\n\n\n\n## Handling Missing Values\n\nFiltering for rows without all three: mean, max or min temperature.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- weather %>%\n  mutate(\n    MeanTemperature = na_if(MeanTemperature, \"-\"),\n    MaxTemperature = na_if(MaxTemperature, \"-\"),\n    MinTemperature = na_if(MinTemperature, \"-\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_na_temp_check <- weather %>% filter(is.na(MeanTemperature) & is.na(MaxTemperature) & is.na(MinTemperature))\nprint(all_na_temp_check)\n```\n:::\n\n\n\n110587 rows of data missing all three!! how do we handle this\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather<- weather %>% filter(!is.na(MeanTemperature) & !is.na(MaxTemperature) & !is.na(MinTemperature))\n```\n:::\n\n\n\n# Importing Dengue Data\n\nThe dengue data sets were provided at the courtesy of the National Environment Agency (NEA), Singapore.\n\nThe data set is also publicly available on [NEA website](https://www.nea.gov.sg/dengue-zika/dengue/dengue-cases) and [Ministry of Health website.](https://www.moh.gov.sg/others/resources-and-statistics/infectious-disease-statistics-2024-weekly-infectious-diseases-bulletin)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWeekly_dengue <-read_xlsx(\"data/Denguecases.xlsx\", \"Weekly\")\n\nMonthly_dengue <-read_xlsx(\"data/Denguecases.xlsx\", \"Monthly\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(Weekly_dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Week                2014              2015              2016      \n Length:54          Min.   :  149.0   Min.   :   91.0   Min.   :   59  \n Class :character   1st Qu.:  212.2   1st Qu.:  172.0   1st Qu.:  135  \n Mode  :character   Median :  294.0   Median :  226.0   Median :  221  \n                    Mean   :  678.7   Mean   :  426.2   Mean   :  495  \n                    3rd Qu.:  437.8   3rd Qu.:  257.0   3rd Qu.:  308  \n                    Max.   :18326.0   Max.   :11294.0   Max.   :13117  \n                                      NA's   :1         NA's   :1      \n      2017             2018             2019            2020      \n Min.   :  24.0   Min.   :  24.0   Min.   :   97   Min.   :  192  \n 1st Qu.:  40.0   1st Qu.:  48.0   1st Qu.:  207   1st Qu.:  362  \n Median :  52.0   Median :  58.0   Median :  287   Median :  423  \n Mean   : 104.4   Mean   : 123.9   Mean   :  603   Mean   : 1306  \n 3rd Qu.:  63.0   3rd Qu.:  75.0   3rd Qu.:  401   3rd Qu.:  918  \n Max.   :2767.0   Max.   :3283.0   Max.   :15979   Max.   :35266  \n NA's   :1        NA's   :1        NA's   :1                      \n      2021             2022            2023             2024        \n Min.   :  42.0   Min.   :  106   Min.   : 100.0   Min.   :   71.0  \n 1st Qu.:  74.0   1st Qu.:  290   1st Qu.: 138.0   1st Qu.:  155.0  \n Median : 104.0   Median :  472   Median : 192.0   Median :  291.0  \n Mean   : 198.4   Mean   : 1214   Mean   : 375.4   Mean   :  515.1  \n 3rd Qu.: 129.0   3rd Qu.:  942   3rd Qu.: 234.0   3rd Qu.:  337.0  \n Max.   :5258.0   Max.   :32173   Max.   :9949.0   Max.   :13651.0  \n NA's   :1        NA's   :1       NA's   :1        NA's   :1        \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(Monthly_dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Month/Year             2014            2015            2016      \n Length:13          Min.   :  638   Min.   :  521   Min.   :  276  \n Class :character   1st Qu.: 1024   1st Qu.:  656   1st Qu.:  723  \n Mode  :character   Median : 1436   Median :  941   Median :  986  \n                    Mean   : 2819   Mean   : 1738   Mean   : 2018  \n                    3rd Qu.: 1887   3rd Qu.: 1237   3rd Qu.: 1863  \n                    Max.   :18326   Max.   :11294   Max.   :13117  \n      2017             2018             2019            2020      \n Min.   : 157.0   Min.   : 136.0   Min.   :  440   Min.   : 1077  \n 1st Qu.: 191.0   1st Qu.: 199.0   1st Qu.: 1039   1st Qu.: 1535  \n Median : 246.0   Median : 296.0   Median : 1262   Median : 2116  \n Mean   : 425.7   Mean   : 505.1   Mean   : 2458   Mean   : 5426  \n 3rd Qu.: 254.0   3rd Qu.: 322.0   3rd Qu.: 1796   3rd Qu.: 4851  \n Max.   :2767.0   Max.   :3283.0   Max.   :15979   Max.   :35266  \n      2021             2022            2023           2024      \n Min.   : 220.0   Min.   :  603   Min.   : 489   Min.   :  391  \n 1st Qu.: 340.0   1st Qu.: 1434   1st Qu.: 728   1st Qu.:  726  \n Median : 427.0   Median : 2012   Median : 878   Median : 1224  \n Mean   : 808.9   Mean   : 4950   Mean   :1531   Mean   : 2100  \n 3rd Qu.: 629.0   3rd Qu.: 4210   3rd Qu.: 961   3rd Qu.: 1466  \n Max.   :5258.0   Max.   :32173   Max.   :9949   Max.   :13651  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather$Mean_Temperature_C <- as.numeric(weather$`Mean Temperature (°C)`)\nweather$Maximum_Temperature_C <- as.numeric(weather$`Maximum Temperature (°C)`)\nweather$Minimum_Temperature_C <- as.numeric(weather$`Minimum Temperature (°C)`)\n\n\nweather_Monthly <- weather %>%\n  group_by(Year, Month) %>%\n  summarize(\n    AvgMeanTemp = mean(Mean_Temperature_C, na.rm = TRUE),\n    MaxTemp = max(Maximum_Temperature_C, na.rm = TRUE),\n    MinTemp = min(Minimum_Temperature_C, na.rm = TRUE)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMonthly_dengue_longer <- Monthly_dengue %>%\n  pivot_longer(\n    cols = 2:12,\n    names_to = \"Year\",\n    values_to = \"denguecases\"\n  )%>%filter(!str_detect(`Month/Year`, \"Total\")) %>%\n  rename(Month = `Month/Year`)\n\n\nMonthly_dengue_longer$Year <- as.numeric(Monthly_dengue_longer$Year)\nMonthly_dengue_longer$Month<- as.numeric(Monthly_dengue_longer$Month)\nprint(Monthly_dengue_longer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 132 × 3\n   Month  Year denguecases\n   <dbl> <dbl>       <dbl>\n 1     1  2014        1887\n 2     1  2015         982\n 3     1  2016        2428\n 4     1  2017         298\n 5     1  2018         298\n 6     1  2019        1071\n 7     1  2020        1729\n 8     1  2021         647\n 9     1  2022         603\n10     1  2023        1016\n# ℹ 122 more rows\n```\n\n\n:::\n:::\n\n\n\n# Combining of the temperature and dengue case data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined_data <- Monthly_dengue_longer %>%   left_join(weather_Monthly, by = c(\"Year\", \"Month\"))\n```\n:::\n\n\n\n# Exporting processed data frames to csv files to be visualised in Shiny App\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.csv(Monthly_dengue_longer, file = \"C:/dewschan/Grp7_Shiny/data/Monthly_dengue_longer.csv\", row.names = FALSE)\n\nwrite.csv(weather_Monthly, file = \"C:/dewschan/Grp7_Shiny/data/weather_Monthly.csv\", row.names = FALSE)\n\nwrite.csv(combined_data, file = \"C:/dewschan/Grp7_Shiny/data/combined_data.csv\", row.names = FALSE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}